buildscript {
	ext {
		springBootVer = '2.7.7'
		springDependencyMgmtVer = '1.1.0'
		querydslVer = '4.4.0'
		querydslPluginVer = '1.0.10'
		jwtVer = '1.0.10'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVer}"
	id 'io.spring.dependency-management' version "${springDependencyMgmtVer}"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation "com.querydsl:querydsl-jpa:${querydslVer}"
	implementation "com.querydsl:querydsl-apt:${querydslVer}"

	//annotationProcessor를 쓰면 별도의 querydsl 플러그인 및 플러그인 설정이 불필요
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVer}:jpa"

	//jwt
	implementation "io.jsonwebtoken:jjwt-api:${jwtVer}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jwtVer}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVer}"
}

tasks.named('test') {
	useJUnitPlatform()
}
